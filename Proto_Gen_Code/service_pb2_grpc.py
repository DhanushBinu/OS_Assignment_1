# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from Proto_Gen_Code import service_pb2 as Proto_dot_service__pb2


class Server_ServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Send_Message_to_all = channel.unary_stream(
                '/proto_package.Server_Service/Send_Message_to_all',
                request_serializer=Proto_dot_service__pb2.Connect_1.SerializeToString,
                response_deserializer=Proto_dot_service__pb2.Response.FromString,
                )
        self.Connect = channel.unary_stream(
                '/proto_package.Server_Service/Connect',
                request_serializer=Proto_dot_service__pb2.Connect_2.SerializeToString,
                response_deserializer=Proto_dot_service__pb2.Response.FromString,
                )
        self.Disconnect = channel.unary_unary(
                '/proto_package.Server_Service/Disconnect',
                request_serializer=Proto_dot_service__pb2.Connect_2.SerializeToString,
                response_deserializer=Proto_dot_service__pb2.Response.FromString,
                )
        self.Send_message = channel.unary_unary(
                '/proto_package.Server_Service/Send_message',
                request_serializer=Proto_dot_service__pb2.Request.SerializeToString,
                response_deserializer=Proto_dot_service__pb2.Empty.FromString,
                )


class Server_ServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Send_Message_to_all(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Connect(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Disconnect(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Send_message(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_Server_ServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Send_Message_to_all': grpc.unary_stream_rpc_method_handler(
                    servicer.Send_Message_to_all,
                    request_deserializer=Proto_dot_service__pb2.Connect_1.FromString,
                    response_serializer=Proto_dot_service__pb2.Response.SerializeToString,
            ),
            'Connect': grpc.unary_stream_rpc_method_handler(
                    servicer.Connect,
                    request_deserializer=Proto_dot_service__pb2.Connect_2.FromString,
                    response_serializer=Proto_dot_service__pb2.Response.SerializeToString,
            ),
            'Disconnect': grpc.unary_unary_rpc_method_handler(
                    servicer.Disconnect,
                    request_deserializer=Proto_dot_service__pb2.Connect_2.FromString,
                    response_serializer=Proto_dot_service__pb2.Response.SerializeToString,
            ),
            'Send_message': grpc.unary_unary_rpc_method_handler(
                    servicer.Send_message,
                    request_deserializer=Proto_dot_service__pb2.Request.FromString,
                    response_serializer=Proto_dot_service__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'proto_package.Server_Service', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Server_Service(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Send_Message_to_all(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/proto_package.Server_Service/Send_Message_to_all',
            Proto_dot_service__pb2.Connect_1.SerializeToString,
            Proto_dot_service__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Connect(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/proto_package.Server_Service/Connect',
            Proto_dot_service__pb2.Connect_2.SerializeToString,
            Proto_dot_service__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Disconnect(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/proto_package.Server_Service/Disconnect',
            Proto_dot_service__pb2.Connect_2.SerializeToString,
            Proto_dot_service__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Send_message(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/proto_package.Server_Service/Send_message',
            Proto_dot_service__pb2.Request.SerializeToString,
            Proto_dot_service__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
